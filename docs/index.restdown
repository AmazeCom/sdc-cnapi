---
title: CNAPI (Compute Node API) Design
apisections: Servers, VMs, Ur, ZFS
markdown2extras: wiki-tables, code-friendly
---

# Who

Orlando
Josh
Bill

# Overview

CNAPI is the 'Compute Node API' which presents an API that workflow jobs can
use to talk to Compute Nodes (CNs).

# Responsibilities

CNAPI is responsible for Compute Node setup, machine life-cycle operations
(creation, state transitions, destruction, etc.) In general, everything should
talk to CNs through CNAPI.

### Dataset Manager

- listing datasets and snapshots on server
- removing datasets from server
    * provisioner (all tasks)
    * Ur
- keeping compute node data up-to-date in UFDS
    * consume heartbeater messages

- manage CN setup process

### Provisioner

- interfacing with vmadm
- interacting with and querying the compute nodes

# Data

CNAPI manages or uses the following data:

- CN resources
    * zpool avail/used/free
    * provisioning ZFS filesystems/volumes
    * configuring shares on said ZFS filesystems
    * memory avail/used/free
    * sysinfo data (uuid, nics, CPUs, extensions, etc)
    * state (unsetup, setting up, up, down, unknown, etc)
    * network info (nic tags)
    * limits (max mem, max disk)
    * platform: current, target
    * currently existing KVMs/Zones
    * server roles and info
- Config:
    * rabbitmq host / creds
    * ufds host / creds
    * service IP
    * Other requirements
    * must use rabbitmq
    * must support 6.5.latest agents/platform as well as master agents/platform

# Compute Node Properties

Compute Node Properties from MAPI:

belongs_to: :server_role :platform_image
has: n, :zones, n, :vms, n, :storage_devices n, :zfs_storage_pools n, :ips, n, :comments, n, :nics, n, :provisioner_messages, n, :physical_nics, n, :vnics, n, :nic_tags,

    hostname
    server_role_id
    ram_in_megabytes
    target_utilization_in_megabytes
    min_available_rmem
    min_arcsize
    reserved
    setting_up_at
    setup_at
    cpu_cores
    current_status
    public_interface
    private_interface
    vendor_number
    vendor_model
    manufacturer
    operating_system
    is_headnode
    latest_boot_at
    platform_image_id
    target_image_set_at
    swap_in_gigabytes
    boot_args
    vm_capable
    cpu_virtualization
    uuid
    hardware_uuid

# UFDS Server Schema

Each server in UFDS will be represented by an object with the following
layout:

||*Property*             ||*Type*||
||uuid                   ||String||
||datacenter             ||String||
||default_console        ||String||
||headnode               ||Boolean||
||hostname               ||String||
||last_boot              ||ISO Date||
||last_updated           ||ISO Date||
||reserved               ||Boolean||
||serial                 ||String||
||serial_speed           ||String||
||setup                  ||Boolean||
||status                 ||String||
||memory_arc_bytes       ||Number||
||memory_available_bytes ||Number||
||memory_total_bytes     ||Number||


CNAPI is responsible for listening for compute node heartbeats and updating
UFDS appropriately.

# Boot parameters

## GetDefaultBootParams (GET /boot/default)

Returns the default boot parameters.

### Inputs

None.

### Examples

    GET /boot/default

### Responses

||**Code**||**Description**||**Response**||
||200||The returned parameters||JSON object||

## GetBootParams (GET /boot/:server_uuid)

Returns the boot parameters for a server.

### Inputs

None.

### Examples

    GET /boot/12494d5e-3960-4d65-a61a-0ca6252d6914

### Responses

||**Code**||**Description**||**Response**||
||200||The returned parameters||JSON object||
# Servers

## ListServers (GET /servers)

Returns servers present in datacenter.

### Inputs

||**Param**||**Type**||**Description**||**Required?**||
||uuids||String||Comma seperated list of UUIDs to look up||No||
||datacenter||String||Datacenter in which to look up Server||No||
||setup||Boolean||Limit results to servers in which the setup flag is set to given value||No||

### Examples

    GET /servers
    GET /servers?uuids=12494d5e-3960-4d65-a61a-0ca6252d6914,215a6ce1-561f-4a36-8016-c401c759f5fbk
    GET /servers/datacenter=foxy
    GET /servers/setup=true

### Responses

||**Code**||**Description**||**Response**||
||200||The servers servers for which given criteria is satisfied||Arrray of Server objects||

## GetServer (GET /servers/:server\_uuid)

Look up a single server by UUID

### Input

None

### Examples

    GET /servers/12494d5e-3960-4d65-a61a-0ca6252d6914

### Responses

||**Code**||**Description**||**Response**||
||200||A server object for sever with given UUID||Server JSON object||
||404||Server could not be found||None||

## UpdateServer (POST /servers/:server\_uuid)

Set the value of an attribute in server's record.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||default\_console||String||Console type||No||
||reserved||Boolean||Indicate whether server is to be considered for provisioning||No||
||serial||String||Default console device||No||
||serial\_speed||Number||Serial speed value||No||
||setup||String||Indicate whether server is set up||No||

### Responses

||**Code**||**Description**||**Response**||
||204||Server updated successfully||None||

### Examples

    POST /servers/12494d5e-3960-4d65-a61a
      -d default_console=vga
      -d setup=true

## SetupServer (PUT /servers/:server\_uuid/setup)

Initiate the server setup process for a newly started server.

### Input

None

### Responses

||**Code**||**Description**||**Response**||
||204||Server already existed and was set up||Server JSON object||
||204||Server set up successfully||None||
||500||Error attempting to set up server||None||

### Examples

    PUT /servers/12494d5e-3960-4d65-a61a/setup

## FactoryReset (PUT /servers/:server\_uuid/factory-reset)

Reset the server back to factory defaults and clear all ZFS pools.

### Input

None

### Responses

||**Code**||**Description**||**Response**||
||204||Server reset initiated successfully||None||
||500||Error attempting to set up server||None||

### Examples

    PUT /servers/12494d5e-3960-4d65-a61a/factory-reset

# VMs

## CreateVm (POST /servers/:server\_uuid/vms)

Provision a VM on the specified server

### Input

||**Param**||**Type**||**Description**||**Required?**||
||jobid||String||CNAPI will post job information to Workflow API with this token||Yes||

*Note*: VM creation payload parameters are as defined by the `vmadm create` command.

### Responses

||**Code**||**Description**||**Response**||
||204||Task was sent to server||None||
||404||No such server||None||

### Examples

    PUT /servers/12494d5e-3960-4d65-a61a/vms

## LoadVm (GET /servers/:server\_uuid/vms/:uuid)

Query the server for the VM's details.

### Input

None

### Responses

||**Code**||**Description**||**Response**||
||204||Task was sent to server||None||
||404||No such VM||None||
||404||No such server||None||

### Examples

    GET /servers/12494d5e-3960-4d65-a61a/vms/ed759072-7ef6-41d9-b8d8-6ce247faccd0

## UpdateVm (POST /servers/:server\_uuid/vms/:uuid/update)

Modify the parameters of the vm identified by `:uuid` on server
`:server\_uuid`.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||jobid||String||CNAPI will post job information to Workflow API with this token||Yes||

*Note*: VM creation payload parameters are as defined by the `vmadm create` command.

### Responses

||**Code**||**Description**||**Response**||
||204||Task was sent to server||None||
||404||No such VM||None||
||404||No such server||None||

### Examples

    POST /servers/12494d5e-3960-4d65-a61a/vms/98112f32-64bc-4064-b8ad-726b2bd598a6/update

## StartVm (POST /servers/:server\_uuid/vms/:uuid/start)

Boot up a vm which is in the 'stopped' state.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||jobid||String||CNAPI will post job information to Workflow API with this token||Yes||

### Responses

||**Code**||**Description**||**Response**||
||204||Task was sent to server||None||
||404||No such VM||None||
||404||No such server||None||

### Examples

    POST /servers/12494d5e-3960-4d65-a61a/vms/98112f32-64bc-4064-b8ad-726b2bd598a6/start

## StopVm (POST /servers/:server\_uuid/vms/:uuid/stop)

Shut down a vm which is in the 'running' state.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||jobid||String||CNAPI will post job information to Workflow API with this token||Yes||

### Responses

||**Code**||**Description**||**Response**||
||204||Task was sent to server||None||

### Examples

    POST /servers/12494d5e-3960-4d65-a61a/vms/98112f32-64bc-4064-b8ad-726b2bd598a6/stop

## RebootVm (POST /servers/:server\_uuid/vms/:uuid/reboot)

Reboot a VM which is in the 'running' state.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||jobid||String||CNAPI will post job information to Workflow API with this token||Yes||

### Responses

||**Code**||**Description**||**Response**||
||204||Task was sent to server||None||
||404||No such VM||None||
||404||No such server||None||

### Examples

    POST /servers/12494d5e-3960-4d65-a61a/vms/98112f32-64bc-4064-b8ad-726b2bd598a6/stop

## DeleteVm (DELETE /servers/:server\_uuid/vms/:uuid)

Delete a VM.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||jobid||String||CNAPI will post job information to Workflow API with this token||Yes||

### Responses

||**Code**||**Description**||**Response**||
||204||Task was sent to server||None||
||404||No such VM||None||
||404||No such server||None||

### Examples

    DELETE /servers/12494d5e-3960-4d65-a61a/vms/98112f32-64bc-4064-b8ad-726b2bd598a6

# Ur

## UpdateUr (POST /ur/:server\_uuid)

Execute a script on a server.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||script||String||A script to be executed on the remote server||Yes||

### Responses

||**Code**||**Description**||**Response**||
||200||Script stdout||String||

### Examples

    POST /ur/12494d5e-3960-4d65-a61a
        -d @script.sh


# ZFS


## ListDatasets (GET /datasets/:server\_uuid)

List ZFS datasets on a server.

### Input

None

### Responses

||**Code**||**Description**||**Response**||
||200||List of datasets||Array of JSON objects, one per dataset||

### Examples

    GET /servers/44454c4c-4800-1034-804a-b2c04f354d31/datasets


## CreateDataset (POST /servers/:server\_uuid/datasets)

Create a ZFS dataset on a server.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||dataset||String||The dataset to be created||Yes||

### Responses

||**Code**||**Description**||**Response**||
||204||Dataset created successfully||None||

### Examples

    POST /servers/44454c4c-4800-1034-804a-b2c04f354d31/datasets -d "datasets=zones/myfs"


## GetProperties (GET /servers/:server\_uuid/datasets/:dataset/properties)

Get ZFS properties for a dataset.  The specific properties to return can be
filtered with ?prop1=foo&prop2=bar, etc.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||dataset||String||The dataset for which to get properties||Yes||
||prop1 ... propN||String||Specific properties to get||No||

### Responses

||**Code**||**Description**||**Response**||
||200||A list of properties||JSON object, keyed by dataset name||

### Examples

    GET /servers/44454c4c-4800-1034-804a-b2c04f354d31/datasets/zones\/myfs/properties
    GET /servers/44454c4c-4800-1034-804a-b2c04f354d31/datasets/zones\/myfs?/properties?prop1=quota&prop2=available


## GetAllProperties (GET /servers/:server\_uuid/dataset-properties)

Get ZFS properties across all datasets.  The specific properties to return can
be filtered with ?prop1=foo&prop2=bar, etc.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||prop1 ... propN||String||Specific properties to get||No||

### Responses

||**Code**||**Description**||**Response**||
||200||A list of properties||JSON object, keyed by dataset name||

### Examples

    GET /servers/44454c4c-4800-1034-804a-b2c04f354d31/dataset-properties?prop1=mountpoint


## SetProperties (POST /servers/:server\_uuid/datasets/:dataset/properties)

Set one or more properties for a ZFS dataset.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||dataset||String||The name of the dataset||Yes||
||properties||Object||Properties to be set on this dataset||Yes||

### Responses

||**Code**||**Description**||**Response**||
||204||Properties were set successfully||None||

### Examples

    POST /servers/44454c4c-4800-1034-804a-b2c04f354d31/datasets/zones\/myfs/properties
    {
         "properties": {
             "quota": "5G"
         }
    }


## DestroyDataset (DELETE /servers/:server\_uuid/datasets/:dataset)

Destroys a ZFS dataset on a server.

### Input

||**Param**||**Type**||**Description**||**Required?**||
||dataset||String||The dataset to be destroyed ||Yes||

### Responses

||**Code**||**Description**||**Response**||
||204||Dataset destroyed successfully||None||

### Examples

    DELETE  /servers/44454c4c-4800-1034-804a-b2c04f354d31/datasets/zones\/myfs


## ListZpools (GET /servers/:server\_uuid/zpools)

List ZFS pools on a server.

### Input

None

### Responses

||**Code**||**Description**||**Response**||
||200||ZFS pool information||String||

### Examples

    GET /servers/44454c4c-4800-1034-804a-b2c04f354d31/zpools
